Board overview
--------------

   +---------+---------+---------+
   |  \   /  |         |         |
2  |   \ /   |         |         |
   |   / \   |         |         |
   +---------+---------+---------+
   |         |   ---   |         |
1  |         |  |   |  |         |
   |         |   ---   |         |
   +---------+---------+---------+
   |         |         |         |
0  |         |         |         |
   |         |         |         |
   +---------+---------+---------+
         0         1         2

+---------+---------+---------+---------+---------+---------+---------+---------+---------+
|         |         |  \   /  |         |   ---   |         |         |         |         |
|         |         |   \ /   |         |  |   |  |         |         |         |         |
|         |         |   / \   |         |   ---   |         |         |         |         |
+---------+---------+---------+---------+---------+---------+---------+---------+---------+
     8         7         6         5         4         3         2         1         0

Winning slices
--------------

1) [(0, 0), (1, 0), (2, 0)] = [0, 1, 2]
2) [(0, 1), (1, 1), (2, 1)] = [3, 4, 5]
3) [(0, 2), (1, 2), (2, 2)] = [6, 7, 8]
4) [(0, 0), (0, 1), (0, 2)] = [0, 3, 6]
5) [(1, 0), (1, 1), (1, 2)] = [1, 4, 7]
6) [(2, 0), (2, 1), (2, 2)] = [2, 5, 8]
7) [(0, 0), (1, 1), (2, 2)] = [0, 4, 8]
8) [(0, 2), (1, 1), (2, 0)] = [6, 4, 2]

Invariants
----------

- Win takes at least 5 moves
- Cannot be more than 9 moves
- Winning zone of moves will be from [5, 9]

Data structure
--------------

Using a 32-bit unsigned integer as the main memory structure, a single square
will be represented as 2 contiguous bytes like:

- `00` - for empty square
- `10` - for `O`
- `11` - for `X`

The MSB is a signaling bit allowing us to distinguish an empty square from one
in use. If the sequence `01` appears (which is the only remaining combination)
then the signaling bit allows us to ignore it and to treat it like any other
square.

The masks for this are:

- `0x2` - for `O` squares
- `0x3` - for `X` squares

This will take up 18 bits of the 32 bytes we have available.

Additionally, a move counter will be added that needs to count from [0, 9] so
this takes up an additional 4 bytes (22 bytes total so far).

There will also be a 2-bit marker for which side the player chooses to play as.
This uses the same identifiers as above with `00` meaning the first move has not
been made. This brings the total used bits to 24.

The remaining 8 bits will be flags indicating which winning slices we can ignore.
For example, if both an `X` and an `O` are present in the left top to right bottom
diagonal winning slice then no player can win that way. We give this possibility
a grave marker to allow the program to skip checking for a win in this slice.
The grave marker will just be an on bit.

NOTE: We can determine a cat's game by using an XOR 0xFF on bytes [24, 31] and if
we get 0x0 then all grave markers have been flipped on. The reason we're not just
naively looking at the count and checking if that is 9, is you can reach a state
where no winning slices are left prior to reaching the 9th move.

31             24  22     18     15                             0
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|0|0|0|0|0|0|0|0|0|0|0|0|0|0|0|0|0|0|0|0|0|0|0|0|0|0|0|0|0|0|0|0|
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
\______________/\___/\______/\__________________________________/
 possible slice  1st   count          game board state

Checking a slice
----------------

A frequent procedure in the program will be checking the slices. There are two
ways that slices must be checked:

1. Check for win
2. Check to mark grave

Example game
------------

Start (move 0)

0x0

   +---------+---------+---------+
   |         |         |         |
2  |         |         |         |
   |         |         |         |
   +---------+---------+---------+
   |         |         |         |
1  |         |         |         |
   |         |         |         |
   +---------+---------+---------+
   |         |         |         |
0  |         |         |         |
   |         |         |         |
   +---------+---------+---------+
        0         1         2

X goes first (move 1)

0xC40300

   +---------+---------+---------+
   |         |         |         |
2  |         |         |         |
   |         |         |         |
   +---------+---------+---------+
   |         |  \   /  |         |
1  |         |   \ /   |         |
   |         |   / \   |         |
   +---------+---------+---------+
   |         |         |         |
0  |         |         |         |
   |         |         |         |
   +---------+---------+---------+
        0         1         2

O goes next (move 2)

0x80C82300

   +---------+---------+---------+
   |   ---   |         |         |
2  |  |   |  |         |         |
   |   ---   |         |         |
   +---------+---------+---------+
   |         |  \   /  |         |
1  |         |   \ /   |         |
   |         |   / \   |         |
   +---------+---------+---------+
   |         |         |         |
0  |         |         |         |
   |         |         |         |
   +---------+---------+---------+
        0         1         2

X goes again (move 3)

0x84CCE300

   +---------+---------+---------+
   |   ---   |  \   /  |         |
2  |  |   |  |   \ /   |         |
   |   ---   |   / \   |         |
   +---------+---------+---------+
   |         |  \   /  |         |
1  |         |   \ /   |         |
   |         |   / \   |         |
   +---------+---------+---------+
   |         |         |         |
0  |         |         |         |
   |         |         |         |
   +---------+---------+---------+
        0         1         2

O goes again (move 4)

0x94D0E308

   +---------+---------+---------+
   |   ---   |  \   /  |         |
2  |  |   |  |   \ /   |         |
   |   ---   |   / \   |         |
   +---------+---------+---------+
   |         |  \   /  |         |
1  |         |   \ /   |         |
   |         |   / \   |         |
   +---------+---------+---------+
   |         |   ---   |         |
0  |         |  |   |  |         |
   |         |   ---   |         |
   +---------+---------+---------+
        0         1         2

X goes again (move 5)

0x9DD4E30B

   +---------+---------+---------+
   |   ---   |  \   /  |         |
2  |  |   |  |   \ /   |         |
   |   ---   |   / \   |         |
   +---------+---------+---------+
   |         |  \   /  |         |
1  |         |   \ /   |         |
   |         |   / \   |         |
   +---------+---------+---------+
   |  \   /  |   ---   |         |
0  |   \ /   |  |   |  |         |
   |   / \   |   ---   |         |
   +---------+---------+---------+
        0         1         2

O goes again (move 6)

0xDDDAE30B

   +---------+---------+---------+
   |   ---   |  \   /  |   ---   |
2  |  |   |  |   \ /   |  |   |  |
   |   ---   |   / \   |   ---   |
   +---------+---------+---------+
   |         |  \   /  |         |
1  |         |   \ /   |         |
   |         |   / \   |         |
   +---------+---------+---------+
   |  \   /  |   ---   |         |
0  |   \ /   |  |   |  |         |
   |   / \   |   ---   |         |
   +---------+---------+---------+
        0         1         2

X goes again (move 7)

0xDDDEE3CB

   +---------+---------+---------+
   |   ---   |  \   /  |   ---   |
2  |  |   |  |   \ /   |  |   |  |
   |   ---   |   / \   |   ---   |
   +---------+---------+---------+
   |  \   /  |  \   /  |         |
1  |   \ /   |   \ /   |         |
   |   / \   |   / \   |         |
   +---------+---------+---------+
   |  \   /  |   ---   |         |
0  |   \ /   |  |   |  |         |
   |   / \   |   ---   |         |
   +---------+---------+---------+
        0         1         2

O goes again (move 8)

0xDFE2E3CB

   +---------+---------+---------+
   |   ---   |  \   /  |   ---   |
2  |  |   |  |   \ /   |  |   |  |
   |   ---   |   / \   |   ---   |
   +---------+---------+---------+
   |  \   /  |  \   /  |   ---   |
1  |   \ /   |   \ /   |  |   |  |
   |   / \   |   / \   |   ---   |
   +---------+---------+---------+
   |  \   /  |   ---   |         |
0  |   \ /   |  |   |  |         |
   |   / \   |   ---   |         |
   +---------+---------+---------+
        0         1         2

X goes last (move 9)

0xDDDEE3CB

   +---------+---------+---------+
   |   ---   |  \   /  |   ---   |
2  |  |   |  |   \ /   |  |   |  |
   |   ---   |   / \   |   ---   |
   +---------+---------+---------+
   |  \   /  |  \   /  |   ---   |
1  |   \ /   |   \ /   |  |   |  |
   |   / \   |   / \   |   ---   |
   +---------+---------+---------+
   |  \   /  |   ---   |  \   /  |
0  |   \ /   |  |   |  |   \ /   |
   |   / \   |   ---   |   / \   |
   +---------+---------+---------+
        0         1         2

